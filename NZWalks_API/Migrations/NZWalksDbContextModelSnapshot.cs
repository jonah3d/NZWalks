// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks_API.Data;

#nullable disable

namespace NZWalks_API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    partial class NZWalksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks_API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13481ca6-5adf-4d76-aa9d-3182bded63e8"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("f0c54f92-fd53-4df1-a329-063aaf089b9d"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("5aab4896-c41a-4b6b-9ae9-9303effa8a82"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks_API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageurl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c154e40d-6aac-41c6-94e7-6d59ddea950f"),
                            Code = "AUK",
                            Name = "Auckland",
                            RegionImageurl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/auckland/auckland/auckland-landscape-1.jpg"
                        },
                        new
                        {
                            Id = new Guid("b19f23e1-4d5a-4e68-aaf2-a64e1262dc7b"),
                            Code = "WKO",
                            Name = "Waikato",
                            RegionImageurl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/waikato/waikato/waikato-landscape-1.jpg"
                        },
                        new
                        {
                            Id = new Guid("433d0c6f-d3d4-4d9f-b3e2-b017d5bc0e34"),
                            Code = "BOP",
                            Name = "Bay of Plenty",
                            RegionImageurl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/bay-of-plenty/bay-of-plenty/bay-of-plenty-landscape-1.jpg"
                        },
                        new
                        {
                            Id = new Guid("3a2c466d-4da2-41b4-944b-6b6e8d6d7c6d"),
                            Code = "GIS",
                            Name = "Gisborne",
                            RegionImageurl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/gisborne/gisborne/gisborne-landscape-1.jpg"
                        },
                        new
                        {
                            Id = new Guid("172beacb-f46c-48b0-ac07-492e2adf7559"),
                            Code = "HKB",
                            Name = "Hawke's Bay",
                            RegionImageurl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/hawkes-bay/hawkes-bay/hawkes-bay-landscape-1.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks_API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks_API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks_API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks_API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
